#!/usr/bin/perl
#
# ASTPP - Open Source Voip Billing
#
# Copyright (C) 2004, Aleph Communications
#
# Darren Wiebe (darren@aleph-com.net)
#
# This program is Free Software and is distributed under the
# terms of the GNU General Public License version 2.
#
# This script is used to authenticate calls to ASTPP accounts based on pin codes in the Dialplan.
# It can be used to do wholesale SIP termination which is authenticated by a pin code that is dialed
# in front of the number to be called.
#
# This example authenticates by ANI.
# exten => _XXXXXXXXXX,1,AGI(astpp-ani-map.agi,${CLIDNUMBER},"ANI")
# exten => _XXXXXXXXXX,2,SetAccount(${ACCOUNT})
#
# This example authenticates by a 10 digit pin that is passed in front of the dialed number.  This
# code is the CC code that is tagged to each account
# exten => _.,1,AGI(astpp-ani-map.agi,${EXTEN:0:10},"ANI")
# exten => _.,2,SetAccount(${ACCOUNT})
# exten => _.,3,(Goto,${EXTEN:10})
# Here you would carry on with your normal dialing.  It would strip off the pin and then carry on
# to your LCR and credit control.

use DBI;
use Asterisk::AGI;
use POSIX qw(ceil floor);
use POSIX qw(strftime);
use strict;
use vars qw(@output $verbose $SIG $astpp_db $config $enh_config $AGI);
@output = ( "STDERR", "LOGFILE" );
$verbose = 2;
require "/usr/local/astpp/astpp-common.pl";
$AGI = new Asterisk::AGI;

sub initialize() {
	$SIG{HUP}   = 'ignore_hup';
	$config     = &load_config();
	$enh_config = &load_config_enh();
	$astpp_db = &connect_db( $config, $enh_config, @output );
        $config     = &load_config_db($astpp_db,$config);
}

sub ignore_hup {
	foreach my $handle (@output) {
		print $handle "HUP received\n";
		$AGI->verbose( "HUP received!\n", $verbose );
	}
}

sub get_ani() {
	my ($number) = @_;
	my ($sql);
	$sql =
	  $astpp_db->prepare(
		"SELECT * FROM ani_map WHERE number = " . $astpp_db->quote($number) . " AND status IN (0,1)" );
	$sql->execute;
	$AGI->verbose( "$sql\n", $verbose );
	my $anidata = $sql->fetchrow_hashref;
	$sql->finish;
	return $anidata;
}

sub get_cc() {
	my ($number) = @_;
	my ($sql);
	$sql =
	  $astpp_db->prepare(
		"SELECT * FROM accounts WHERE cc = " . $astpp_db->quote($number) );
	$sql->execute;
	$AGI->verbose( "$sql\n", $verbose );
	my $anidata = $sql->fetchrow_hashref;
	$sql->finish;
	return $anidata;
}
################# Program Starts Here #################################
my ( $number, $type ) = @ARGV;
my ( $sql, $anidata );
&initialize;
if ( $type eq "ANI" ) {
	$anidata = &get_ani($number);
	$AGI->set_variable( 'ACCOUNT', "\"$anidata->{cc}\"" );
	$AGI->exec( 'Set',        "ACCOUNT=$anidata->{cc}" );
}
else {
	$anidata = &get_cc($number);
	$AGI->set_variable( 'ACCOUNT', "\"$anidata->{cc}\"" );
	$AGI->exec( 'Set',        "ACCOUNT=$anidata->{cc}" );
}
